import re
import subprocess
import csv
import os

def process_file(file_path, label):
    try:
        ps = subprocess.Popen(['objdump', '-d', file_path], stdout=subprocess.PIPE)
        sed_command = r"/Disassembly of section .text:/,/Disassembly of section .fini:/p"
        sed_process = subprocess.Popen(['sed', '-n', sed_command], stdin=ps.stdout, stdout=subprocess.PIPE)
        disassembly_text, _ = sed_process.communicate()
        disassembly_text = disassembly_text.decode('utf-8')
        ps.wait()
    except subprocess.CalledProcessError as e:
        print("Error:", e)

    # Define a regular expression pattern to match function names
    function_pattern = r'^([0-9a-f]+) <([^>]+)>:$'

    # Split the disassembly text into function blocks
    function_blocks = re.split(function_pattern, disassembly_text, flags=re.MULTILINE)[1:]

    # Loop through each function block (name and instructions)
    for i in range(0, len(function_blocks), 3):
        address = function_blocks[i]
        function_name = function_blocks[i + 1]
        if function_name == '.fini':
            break
        instructions = function_blocks[i + 2].splitlines()

        # Process the instructions as needed
        instruction_sequence = [line.split('\t') for line in instructions if len(line) > 0]
        instruction_sequence = [line[2] for line in instruction_sequence if len(line) > 2]
        instruction_sequence = [instruction.split()[0] for instruction in instruction_sequence]

        # Write data to CSV immediately
        csv_writer.writerow([file_path, function_name, ' '.join(instruction_sequence), label, len(instruction_sequence)])

# Write CSV data to a file incrementally
csv_file_path = "dataset.csv"
with open(csv_file_path, "w", newline="") as csv_file:
    csv_writer = csv.writer(csv_file)
    csv_writer.writerow(["File", "Function", "Sequence", "Label", "Length"])

    data_directory = os.path.dirname(__file__)
    for label, directory in enumerate(['benign', 'malicious']):
        path = os.path.join(data_directory, directory)
        for filename in os.listdir(path):
            file_path = os.path.join(path, filename)
            process_file(file_path, label=label)

print("CSV file written:", csv_file_path)
